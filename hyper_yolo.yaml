# Training configuration
train:
  imgsz: [640, 480] # ou imgsz: 640 para imagens quadradas
  batch: 64 # (1-32) pequeno || (64-128) médio || (256-512 ou mais) grande || batches maiores permitem maiores lr's
  weight_decay: 0.001 # penalizar pesos, quanto maior, melhor generalização para coisas que o modelo n viu, mas menor o apredizado por época || 0.1 é alto, 0.0005 é baixo

# Exemplo de proporção prática: Se warmup lr = 0.001, um bom ponto de partida para warmup bias lr pode ser entre 10% a 20% desse valor, ou seja, warmup bias lr = 0.0001 a 0.0002.

  warmup_lr: 0.005
  warmup_epochs: 10  # Número de epochs de warmup
  warmup_momentum: 0.5  # Momentum durante o warmup
  warmup_bias_lr: 0.0002  # Learning rate para bias durante o warmup | Para redes profundas, datasets desequilibrados, ou quando o foco é estabilidade inicial: (0.001–0.005) | Para redes médias ou bem inicializadas:  (0.01–0.1)

# Exemplo: Se lr0 = 0.01, um lrf típico seria entre 0.001 e 0.1.
# Impacto de uma lrf maior: Convergência mais lenta: O learning rate final não será muito menor que o inicial. Pode ser útil para problemas menores ou simples onde o modelo já está próximo do ótimo durante o treinamento.
# Impacto de uma lrf menor: Convergência mais precisa: O learning rate final será significativamente menor. É mais adequado para problemas complexos ou ruidosos, permitindo ajustes mais finos no final.
  
  epochs: 50
  momentum: 0.9 ### controla a taxa de atualização dos pesos do modelo, ou seja, muito alto os pesos são atualizados mais vezes durante o treinamento, quanto maior, mais atualiza os pesos, 0.95 é alto, (0.8 - 0.9) médio
  lr0: 0.05  # Learning rate inicial
  lrf: 0.005  # Learning rate final | Datasets complexos ou com grande variabilidade: (lrf=0.001 ou lrf=0.005) | Datasets pequenos ou com baixo ruído: (lrf=0.05 a 0.1)
  
  augmentation:
    hsv_h: 0.015             # Alteração de tonalidade
    hsv_s: 0.7               # Alteração de saturação
    hsv_v: 0.4               # Alteração de brilho
    degrees: 10              # Rotação em graus
    translate: 0.1           # Translação (fração da dimensão da imagem) | Significado: Desloca a imagem ao longo dos eixos x e y. Isso pode mover o objeto para a esquerda, direita, cima ou baixo. | Impacto: O translate permite que o modelo aprenda a lidar com objetos que podem não estar centralizados na imagem. Isso é útil em cenários onde o objeto pode estar em qualquer parte da cena.
    scale: 0.5               # Escala (fração)
    shear: 0                 # Cisalhamento (em graus) | Significado: Aplica uma distorção de cisalhamento (shearing) na imagem, o que altera as linhas da imagem, mas mantém a mesma área total. Impacto: O shear pode ajudar a melhorar a robustez do modelo em relação a diferentes deformações geométricas que podem ocorrer, especialmente em imagens de objetos com formas retas.
    perspective: 0.0005      # Perspectiva | Impacto: A distorção de perspectiva pode simular o fato de que os objetos podem ser vistos de ângulos diferentes. Isso ajuda o modelo a se tornar mais robusto em diferentes condições de visualização. | Aplique valores muito pequenos para ajustes sutis. | 0.0–0.0005: Pequena distorção, com ajustes moderados. | 0.0005–0.001: Distúrbio mais visível, mas útil para simular diferentes ângulos de visão.
    flipud: 0.5              # Probabilidade de flip vertical
    fliplr: 0.5              # Probabilidade de flip horizontal
    mosaic: 0                # Ativação de Mosaic | combina várias imagens | Impacto: Isso ajuda a criar imagens de treinamento com múltiplos objetos, tornando o modelo mais robusto a cenários com objetos sobrepostos e posições variadas.
    mixup: 0                 # Mistura de imagens | Impacto: O mixup ajuda a criar imagens compostas que não correspondem diretamente a nenhum dos objetos, o que pode ajudar a melhorar a robustez do modelo. No entanto, muito mixup pode gerar imagens irreais, dificultando o treinamento.
    copy_paste: 0            # Probabilidade de Copy-Paste | Significado: Técnica de copy-paste envolve copiar objetos de uma imagem e colá-los em outra, criando novos cenários e sobreposições. | Impacto: Copy-paste pode criar imagens artificiais, misturando objetos de diferentes imagens. Isso pode ser útil para gerar imagens de cenários com objetos diferentes dos originais, mas cuidado, pois também pode gerar imagens irreais.
    auto_augment: False      # Política automática (Exemplo: 'randaugment') | Ativa o método AutoAugment, que usa uma combinação de augmentations pré-definidas de maneira automatizada e otimizada. | Impacto: AutoAugment é uma técnica avançada que seleciona automaticamente as augmentations mais apropriadas para o seu modelo, de acordo com a tarefa de treinamento. Pode melhorar significativamente o desempenho do modelo, mas é mais computacionalmente caro.

